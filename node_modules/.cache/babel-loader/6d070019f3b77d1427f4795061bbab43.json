{"ast":null,"code":"import axios from\"axios\";export const ALL_COUNTRIES=\"ALL_COUNTRIES\";export const FIND_NAME_COUNTRIES=\"FIND_NAME_COUNTRIES\";export const GET_NAME_COUNTRY=\"GET_NAME_COUNTRY\";export const FIND_ID_COUNTRY=\"FIND_ID_COUNTRY\";export const GET_ALL_ACTIVITY=\"GET_ALL_ACTIVITY\";export const CREATE_ACTIVITIES=\"CREATE_ACTIVITIES\";//------------------ request pokemons ----------------\nexport const get_all_countries=()=>async dispatch=>{try{const getAllCountries=await axios.get(\"https://api-countries-deploy.vercel.app/countries__\");return dispatch({type:ALL_COUNTRIES,payload:getAllCountries.data});}catch(error){return dispatch({type:ALL_COUNTRIES,payload:{mensaje:error}});}};export const get_name_countries=name=>async dispatch=>{try{const getINameCountries=await axios.get(\"https://api-countries-deploy.vercel.app/countries__/name?name=\".concat(name));return dispatch({type:FIND_NAME_COUNTRIES,payload:getINameCountries.data});}catch(error){return dispatch({type:FIND_NAME_COUNTRIES,payload:{mensaje:error.message}});}};export const get_id_countries=id=>async dispatch=>{try{const getIdCountries=await axios.get(\"https://api-countries-deploy.vercel.app/countries__/\".concat(id));return dispatch({type:FIND_ID_COUNTRY,payload:getIdCountries.data});}catch(error){return dispatch({type:FIND_ID_COUNTRY,payload:{mensaje:error.message}});}};// --------- peticiones de las actividades------\nexport const get_all_activity=()=>async dispatch=>{try{const getAllActivities=await axios.get(\"https://api-countries-deploy.vercel.app/activity__\");return dispatch({type:GET_ALL_ACTIVITY,payload:getAllActivities.data});}catch(error){return dispatch({type:GET_ALL_ACTIVITY,payload:{mensaje:error}});}};export const create_activities=obj=>async dispatch=>{try{const createActivities=await axios.post(\"https://api-countries-deploy.vercel.app/activity__\",obj);return dispatch({type:CREATE_ACTIVITIES,payload:createActivities.data});}catch(error){return dispatch({type:CREATE_ACTIVITIES,payload:error});}};","map":{"version":3,"names":["axios","ALL_COUNTRIES","FIND_NAME_COUNTRIES","GET_NAME_COUNTRY","FIND_ID_COUNTRY","GET_ALL_ACTIVITY","CREATE_ACTIVITIES","get_all_countries","dispatch","getAllCountries","get","type","payload","data","error","mensaje","get_name_countries","name","getINameCountries","concat","message","get_id_countries","id","getIdCountries","get_all_activity","getAllActivities","create_activities","obj","createActivities","post"],"sources":["C:/xampp/htdocs/deploy/PI-Countries-main/client_countries_deploy/src/redux/action/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const ALL_COUNTRIES = \"ALL_COUNTRIES\";\r\nexport const FIND_NAME_COUNTRIES = \"FIND_NAME_COUNTRIES\";\r\nexport const GET_NAME_COUNTRY = \"GET_NAME_COUNTRY\";\r\nexport const FIND_ID_COUNTRY = \"FIND_ID_COUNTRY\";\r\nexport const GET_ALL_ACTIVITY = \"GET_ALL_ACTIVITY\";\r\nexport const CREATE_ACTIVITIES = \"CREATE_ACTIVITIES\"; \r\n\r\n//------------------ request pokemons ----------------\r\n\r\nexport const get_all_countries = () => async (dispatch) => {\r\n    try {\r\n        const getAllCountries = await axios.get(\"https://api-countries-deploy.vercel.app/countries__\");\r\n        return dispatch({\r\n            type: ALL_COUNTRIES,\r\n            payload: getAllCountries.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: ALL_COUNTRIES,\r\n            payload: {mensaje: error}\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_name_countries = (name) => async (dispatch) => {\r\n    try {\r\n        const getINameCountries = await axios.get(`https://api-countries-deploy.vercel.app/countries__/name?name=${name}`);\r\n        return dispatch({\r\n            type: FIND_NAME_COUNTRIES,\r\n            payload: getINameCountries.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: FIND_NAME_COUNTRIES,\r\n            payload: {mensaje: error.message}\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_id_countries = (id) => async (dispatch) => {\r\n    try {\r\n        const getIdCountries = await axios.get(`https://api-countries-deploy.vercel.app/countries__/${id}`);\r\n        return dispatch({\r\n            type: FIND_ID_COUNTRY,\r\n            payload: getIdCountries.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: FIND_ID_COUNTRY,\r\n            payload: {mensaje: error.message}\r\n        });\r\n    }\r\n}\r\n\r\n// --------- peticiones de las actividades------\r\n\r\nexport const get_all_activity = () => async (dispatch) => {\r\n    try {\r\n        const getAllActivities = await axios.get(\"https://api-countries-deploy.vercel.app/activity__\");\r\n        return dispatch({\r\n            type: GET_ALL_ACTIVITY,\r\n            payload: getAllActivities.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: GET_ALL_ACTIVITY,\r\n            payload: {mensaje: error}\r\n        });\r\n    }\r\n}\r\n\r\nexport const create_activities = (obj) => async (dispatch) => {\r\n    try {\r\n        const createActivities = await axios.post(`https://api-countries-deploy.vercel.app/activity__`, obj);\r\n        return dispatch({\r\n            type: CREATE_ACTIVITIES,\r\n            payload: createActivities.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: CREATE_ACTIVITIES,\r\n            payload: error\r\n        });\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nexport const ALL_COUNTRIES = \"ALL_COUNTRIES\";\nexport const FIND_NAME_COUNTRIES = \"FIND_NAME_COUNTRIES\";\nexport const GET_NAME_COUNTRY = \"GET_NAME_COUNTRY\";\nexport const FIND_ID_COUNTRY = \"FIND_ID_COUNTRY\";\nexport const GET_ALL_ACTIVITY = \"GET_ALL_ACTIVITY\";\n\n//------------------ request pokemons ----------------\n\nexport const get_all_countries = () => async dispatch => {\n  try {\n    const getAllCountries = await axios.get(\"http://localhost:3001/countries__\");\n    return dispatch({\n      type: ALL_COUNTRIES,\n      payload: getAllCountries.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: ALL_COUNTRIES,\n      payload: {\n        mensaje: error\n      }\n    });\n  }\n};\nexport const get_name_countries = name => async dispatch => {\n  try {\n    const getINameCountries = await axios.get(`http://localhost:3001/countries__/name?name=${name}`);\n    return dispatch({\n      type: FIND_NAME_COUNTRIES,\n      payload: getINameCountries.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: FIND_NAME_COUNTRIES,\n      payload: {\n        mensaje: error.message\n      }\n    });\n  }\n};\nexport const get_id_countries = id => async dispatch => {\n  try {\n    const getIdCountries = await axios.get(`http://localhost:3001/countries__/${id}`);\n    return dispatch({\n      type: FIND_ID_COUNTRY,\n      payload: getIdCountries.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: FIND_ID_COUNTRY,\n      payload: {\n        mensaje: error.message\n      }\n    });\n  }\n};\n`------------peticion `;","map":{"version":3,"names":["axios","ALL_COUNTRIES","FIND_NAME_COUNTRIES","GET_NAME_COUNTRY","FIND_ID_COUNTRY","GET_ALL_ACTIVITY","get_all_countries","dispatch","getAllCountries","get","type","payload","data","error","mensaje","get_name_countries","name","getINameCountries","message","get_id_countries","id","getIdCountries"],"sources":["E:/proyects/PI-Countries-main/client/src/redux/action/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const ALL_COUNTRIES = \"ALL_COUNTRIES\";\r\nexport const FIND_NAME_COUNTRIES = \"FIND_NAME_COUNTRIES\";\r\nexport const GET_NAME_COUNTRY = \"GET_NAME_COUNTRY\";\r\nexport const FIND_ID_COUNTRY = \"FIND_ID_COUNTRY\";\r\nexport const GET_ALL_ACTIVITY = \"GET_ALL_ACTIVITY\"\r\n\r\n//------------------ request pokemons ----------------\r\n\r\nexport const get_all_countries = () => async (dispatch) => {\r\n    try {\r\n        const getAllCountries = await axios.get(\"http://localhost:3001/countries__\");\r\n        return dispatch({\r\n            type: ALL_COUNTRIES,\r\n            payload: getAllCountries.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: ALL_COUNTRIES,\r\n            payload: {mensaje: error}\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_name_countries = (name) => async (dispatch) => {\r\n    try {\r\n        const getINameCountries = await axios.get(`http://localhost:3001/countries__/name?name=${name}`);\r\n        return dispatch({\r\n            type: FIND_NAME_COUNTRIES,\r\n            payload: getINameCountries.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: FIND_NAME_COUNTRIES,\r\n            payload: {mensaje: error.message}\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_id_countries = (id) => async (dispatch) => {\r\n    try {\r\n        const getIdCountries = await axios.get(`http://localhost:3001/countries__/${id}`);\r\n        return dispatch({\r\n            type: FIND_ID_COUNTRY,\r\n            payload: getIdCountries.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: FIND_ID_COUNTRY,\r\n            payload: {mensaje: error.message}\r\n        });\r\n    }\r\n}\r\n\r\n`------------peticion `\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;;AAElD;;AAEA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACvD,IAAI;IACA,MAAMC,eAAe,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC;IAC5E,OAAOF,QAAQ,CAAC;MACZG,IAAI,EAAET,aAAa;MACnBU,OAAO,EAAEH,eAAe,CAACI;IAC7B,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAON,QAAQ,CAAC;MACZG,IAAI,EAAET,aAAa;MACnBU,OAAO,EAAE;QAACG,OAAO,EAAED;MAAK;IAC5B,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAIC,IAAI,IAAK,MAAOT,QAAQ,IAAK;EAC5D,IAAI;IACA,MAAMU,iBAAiB,GAAG,MAAMjB,KAAK,CAACS,GAAG,CAAE,+CAA8CO,IAAK,EAAC,CAAC;IAChG,OAAOT,QAAQ,CAAC;MACZG,IAAI,EAAER,mBAAmB;MACzBS,OAAO,EAAEM,iBAAiB,CAACL;IAC/B,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAON,QAAQ,CAAC;MACZG,IAAI,EAAER,mBAAmB;MACzBS,OAAO,EAAE;QAACG,OAAO,EAAED,KAAK,CAACK;MAAO;IACpC,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,EAAE,IAAK,MAAOb,QAAQ,IAAK;EACxD,IAAI;IACA,MAAMc,cAAc,GAAG,MAAMrB,KAAK,CAACS,GAAG,CAAE,qCAAoCW,EAAG,EAAC,CAAC;IACjF,OAAOb,QAAQ,CAAC;MACZG,IAAI,EAAEN,eAAe;MACrBO,OAAO,EAAEU,cAAc,CAACT;IAC5B,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAON,QAAQ,CAAC;MACZG,IAAI,EAAEN,eAAe;MACrBO,OAAO,EAAE;QAACG,OAAO,EAAED,KAAK,CAACK;MAAO;IACpC,CAAC,CAAC;EACN;AACJ,CAAC;AAEA,uBAAsB"},"metadata":{},"sourceType":"module"}
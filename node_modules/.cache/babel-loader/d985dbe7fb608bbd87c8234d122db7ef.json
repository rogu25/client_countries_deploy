{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyects\\\\PI-Countries-main\\\\client\\\\src\\\\components\\\\Countries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { get_all_countries } from \"../redux/action\";\nimport CardCountry from './CardCountry';\nimport \"../css/Countries.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Countries() {\n  _s();\n  const dispatch = useDispatch();\n  const countries = useSelector(state => state.countries);\n  const [next, setNext] = useState(10);\n  let contadorPage = countries.length / 10;\n  let contadorBtn = contadorPage / 5;\n  const onClickBackPage = () => {};\n  const onclickPage = e => {\n    console.log(\"boton que presione: \", e.target.id);\n  };\n  useEffect(() => {\n    !countries.length && dispatch(get_all_countries());\n  }, [countries, dispatch]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginado\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickBackPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickBackPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), countries.length && countries.map((p, i) => {\n        if (i < contadorBtn) {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            id: i + 1,\n            onClick: onclickPage,\n            children: i + 1\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickBackPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content_countries\",\n      children: countries.length && countries.map(c => {\n        return /*#__PURE__*/_jsxDEV(CardCountry, {\n          id: c.id,\n          imagen: c.imagen,\n          nombre: c.name,\n          continente: c.continente,\n          poblacion: c.poblacion\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Countries, \"E7c6rFZV4EDPKYfHQvL+nxlA92g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","get_all_countries","CardCountry","jsxDEV","_jsxDEV","Countries","_s","dispatch","countries","state","next","setNext","contadorPage","length","contadorBtn","onClickBackPage","onclickPage","e","console","log","target","id","Fragment","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","p","i","c","imagen","nombre","name","continente","poblacion","_c","$RefreshReg$"],"sources":["D:/proyects/PI-Countries-main/client/src/components/Countries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { get_all_countries } from \"../redux/action\";\r\n\r\nimport CardCountry from './CardCountry';\r\n\r\nimport \"../css/Countries.css\";\r\n\r\nfunction Countries() {\r\n\r\n    const dispatch = useDispatch();\r\n    const countries = useSelector((state) => state.countries);\r\n    const [next, setNext] = useState(10);\r\n    let contadorPage = countries.length / 10;\r\n    let contadorBtn = contadorPage / 5;\r\n    \r\n    const onClickBackPage = () => {\r\n      \r\n    }\r\n\r\n    const onclickPage = (e) => {\r\n      console.log(\"boton que presione: \", e.target.id)\r\n    }\r\n\r\n    useEffect(() => {\r\n      !countries.length &&  dispatch(get_all_countries());\r\n    }, [countries, dispatch]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"paginado\">\r\n        <button onClick={onClickBackPage}>{'<<'}</button>\r\n        <button onClick={onClickBackPage}>{'<'}</button>\r\n         {\r\n          countries.length && countries.map((p, i) => {\r\n            if(i<contadorBtn){\r\n              return (\r\n                <button key={p.id} id={i+1} onClick={onclickPage}>{i+1}</button>\r\n              );\r\n            }\r\n          })\r\n         }\r\n         <button onClick={onClickBackPage}>{'<'}</button>\r\n         <button>{'>>'}</button>\r\n      </div>\r\n      <div  className='content_countries'>\r\n        {\r\n          countries.length && countries.map((c) => {\r\n            return <CardCountry key={c.id} id={c.id} imagen={c.imagen} nombre={c.name} continente={c.continente} poblacion={c.poblacion}/>\r\n          })\r\n        }\r\n    </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Countries;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nexport const ALL_COUNTRIES = \"ALL_COUNTRIES\";\nexport const FIND_NAME_COUNTRIES = \"FIND_NAME_COUNTRIES\";\nexport const GET_NAME_COUNTRY = \"GET_NAME_COUNTRY\";\nexport const FIND_ID_COUNTRY = \"FIND_ID_COUNTRY\";\nexport const GET_ALL_ACTIVITY = \"GET_ALL_ACTIVITY\";\nexport const CREATE_ACTIVITIES = \"CREATE_ACTIVITIES\";\n\n//------------------ request pokemons ----------------\n\nexport const get_all_countries = () => async dispatch => {\n  try {\n    const getAllCountries = await axios.get(\"http://localhost:3001/countries__\");\n    return dispatch({\n      type: ALL_COUNTRIES,\n      payload: getAllCountries.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: ALL_COUNTRIES,\n      payload: {\n        mensaje: error\n      }\n    });\n  }\n};\nexport const get_name_countries = name => async dispatch => {\n  try {\n    const getINameCountries = await axios.get(`http://localhost:3001/countries__/name?name=${name}`);\n    return dispatch({\n      type: FIND_NAME_COUNTRIES,\n      payload: getINameCountries.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: FIND_NAME_COUNTRIES,\n      payload: {\n        mensaje: error.message\n      }\n    });\n  }\n};\nexport const get_id_countries = id => async dispatch => {\n  try {\n    const getIdCountries = await axios.get(`http://localhost:3001/countries__/${id}`);\n    return dispatch({\n      type: FIND_ID_COUNTRY,\n      payload: getIdCountries.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: FIND_ID_COUNTRY,\n      payload: {\n        mensaje: error.message\n      }\n    });\n  }\n};\n\n// --------- peticiones de las actividades------\n\nexport const get_all_activity = () => async dispatch => {\n  try {\n    const getAllActivities = await axios.get(\"http://localhost:3001/activity__\");\n    return dispatch({\n      type: GET_ALL_ACTIVITY,\n      payload: getAllActivities.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: GET_ALL_ACTIVITY,\n      payload: {\n        mensaje: error\n      }\n    });\n  }\n};\nexport const create_activities = obj => async dispatch => {\n  try {\n    const createActivities = await axios.post(`http://localhost:3001/activity__`, obj);\n    return dispatch({\n      type: CREATE_ACTIVITIES,\n      payload: createActivities.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: CREATE_ACTIVITIES,\n      payload: {\n        mensaje: error.message\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","ALL_COUNTRIES","FIND_NAME_COUNTRIES","GET_NAME_COUNTRY","FIND_ID_COUNTRY","GET_ALL_ACTIVITY","CREATE_ACTIVITIES","get_all_countries","dispatch","getAllCountries","get","type","payload","data","error","mensaje","get_name_countries","name","getINameCountries","message","get_id_countries","id","getIdCountries","get_all_activity","getAllActivities","create_activities","obj","createActivities","post"],"sources":["E:/proyects/PI-Countries-main/client/src/redux/action/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const ALL_COUNTRIES = \"ALL_COUNTRIES\";\r\nexport const FIND_NAME_COUNTRIES = \"FIND_NAME_COUNTRIES\";\r\nexport const GET_NAME_COUNTRY = \"GET_NAME_COUNTRY\";\r\nexport const FIND_ID_COUNTRY = \"FIND_ID_COUNTRY\";\r\nexport const GET_ALL_ACTIVITY = \"GET_ALL_ACTIVITY\";\r\nexport const CREATE_ACTIVITIES = \"CREATE_ACTIVITIES\"; \r\n\r\n//------------------ request pokemons ----------------\r\n\r\nexport const get_all_countries = () => async (dispatch) => {\r\n    try {\r\n        const getAllCountries = await axios.get(\"http://localhost:3001/countries__\");\r\n        return dispatch({\r\n            type: ALL_COUNTRIES,\r\n            payload: getAllCountries.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: ALL_COUNTRIES,\r\n            payload: {mensaje: error}\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_name_countries = (name) => async (dispatch) => {\r\n    try {\r\n        const getINameCountries = await axios.get(`http://localhost:3001/countries__/name?name=${name}`);\r\n        return dispatch({\r\n            type: FIND_NAME_COUNTRIES,\r\n            payload: getINameCountries.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: FIND_NAME_COUNTRIES,\r\n            payload: {mensaje: error.message}\r\n        });\r\n    }\r\n}\r\n\r\nexport const get_id_countries = (id) => async (dispatch) => {\r\n    try {\r\n        const getIdCountries = await axios.get(`http://localhost:3001/countries__/${id}`);\r\n        return dispatch({\r\n            type: FIND_ID_COUNTRY,\r\n            payload: getIdCountries.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: FIND_ID_COUNTRY,\r\n            payload: {mensaje: error.message}\r\n        });\r\n    }\r\n}\r\n\r\n// --------- peticiones de las actividades------\r\n\r\nexport const get_all_activity = () => async (dispatch) => {\r\n    try {\r\n        const getAllActivities = await axios.get(\"http://localhost:3001/activity__\");\r\n        return dispatch({\r\n            type: GET_ALL_ACTIVITY,\r\n            payload: getAllActivities.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: GET_ALL_ACTIVITY,\r\n            payload: {mensaje: error}\r\n        });\r\n    }\r\n}\r\n\r\nexport const create_activities = (obj) => async (dispatch) => {\r\n    try {\r\n        const createActivities = await axios.post(`http://localhost:3001/activity__`, obj);\r\n        return dispatch({\r\n            type: CREATE_ACTIVITIES,\r\n            payload: createActivities.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: CREATE_ACTIVITIES,\r\n            payload: {mensaje: error.message}\r\n        });\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
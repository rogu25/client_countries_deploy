{"ast":null,"code":"const validation = input => {\n  let errors = {};\n  if (tiene_numeros(input.name_) === 1) {\n    errors.name = 'No se permite numeros';\n  } else if (input.name === '') {\n    errors.name = 'Campo vacío';\n  }\n  if (tiene_numeros(input.name) === 1) {\n    errors.name = 'No se permite numeros';\n  } else if (input.name === '') {\n    errors.name = 'Campo vacío';\n  } else if (input.name.length < 4) {\n    errors.name = 'El nombre es muy corto';\n  }\n  if (input.name_pais) {\n    if (tiene_numeros(input.name_pais) === 1) {\n      errors.name_pais = 'No se permite numeros';\n    }\n  }\n  if (!input.temporada) {\n    errors.temporada = 'Elija una temporada';\n  }\n  if (input.countries && !input.countries.length) {\n    errors.countries = 'No hay paises seleccionados';\n  }\n\n  // if (tiene_letras(input.fuerza) === 1) {\n  //   errors.fuerza = 'No se permite texto';\n  // }else if(Number(input.fuerza) < 10){\n  //   errors.fuerza = 'Minimo 10';\n  // }else if(Number(input.fuerza) > 1000){\n  //   errors.fuerza = 'Excedio el limite';\n  // }\n\n  // if (tiene_letras(input.defensa) === 1) {\n  //   errors.defensa = 'No se permite texto';\n  // }else if(Number(input.defensa) < 10){\n  //   errors.defensa = 'Minimo 10';\n  // }else if(Number(input.defensa) > 1000){\n  //   errors.defensa = 'Excedio el limite';\n  // }\n\n  // if (tiene_letras(input.velocidad) === 1) {\n  //   errors.velocidad = 'No se permite texto';\n  // }else if(Number(input.velocidad) < 10){\n  //   errors.velocidad = 'Minimo 10';\n  // }else if(Number(input.velocidad) > 1000){\n  //   errors.velocidad = 'Excedio el limite';\n  // }\n\n  // if (tiene_letras(input.altura) === 1) {\n  //   errors.altura = 'No se permite texto';\n  // }else if(Number(input.altura) < 10){\n  //   errors.altura = 'Minimo 10';\n  // }else if(Number(input.altura) > 1000){\n  //   errors.altura = 'Excedio el limite';\n  // }\n\n  // if (tiene_letras(input.peso) === 1) {\n  //   errors.peso = 'No se permite texto';\n  // }else if(Number(input.peso) < 10){\n  //   errors.peso = 'Minimo 10';\n  // }else if(Number(input.peso) > 1000){\n  //   errors.peso = 'Excedio el limite';\n  // }\n\n  // if (!/(.jpg|.jpeg|.png|.gif)$/i.exec(input.imagen)) {\n  //   errors.imagen = 'Img is required';\n  // }\n\n  // if (!input.tipos.length) {\n  //   errors.tipos = 'Seleccione tipo de pokemon';\n  // }else if(input.tipos.length > 3){\n  //   errors.tipos = \"Maximo 3 tipos\";\n  // }\n\n  return errors;\n};\n\n// valida si un texto contiene numero\nfunction tiene_numeros(texto) {\n  let numeros = \"0123456789\";\n  for (let i = 0; i < texto.length; i++) {\n    if (numeros.indexOf(texto.charAt(i), 0) !== -1) {\n      return 1;\n    }\n  }\n  return 0;\n}\n\n// valida si un numero contiene letras\n// function tiene_letras(texto){\n//   var letras=\"abcdefghyjklmnñopqrstuvwxyz\";\n//   for(let i=0; i<texto.length; i++){\n//      if (letras.indexOf(texto.charAt(i),0)!==-1){\n//         return 1;\n//      }\n//   }\n//   return 0;\n// }\n\nexport default validation;","map":{"version":3,"names":["validation","input","errors","tiene_numeros","name_","name","length","name_pais","temporada","countries","texto","numeros","i","indexOf","charAt"],"sources":["C:/xampp/htdocs/deploy/PI-Countries-main/client/src/components/Validador.js"],"sourcesContent":["const validation = (input) => {\r\n  \r\n    let errors = {};\r\n\r\n    if (tiene_numeros(input.name_) === 1) {\r\n      errors.name = 'No se permite numeros';\r\n    } else if(input.name === ''){\r\n      errors.name = 'Campo vacío';\r\n    } \r\n\r\n    if (tiene_numeros(input.name) === 1) {\r\n      errors.name = 'No se permite numeros';\r\n    } else if(input.name === ''){\r\n      errors.name = 'Campo vacío';\r\n    } else if(input.name.length < 4){\r\n      errors.name = 'El nombre es muy corto';\r\n    }\r\n\r\n    if(input.name_pais){\r\n      if (tiene_numeros(input.name_pais) === 1) {\r\n        errors.name_pais = 'No se permite numeros';\r\n      } \r\n    }\r\n  \r\n    if (!input.temporada) {\r\n      errors.temporada = 'Elija una temporada';\r\n    } \r\n\r\n    if (input.countries && !input.countries.length ) {\r\n      errors.countries = 'No hay paises seleccionados';\r\n    } \r\n\r\n  \r\n    // if (tiene_letras(input.fuerza) === 1) {\r\n    //   errors.fuerza = 'No se permite texto';\r\n    // }else if(Number(input.fuerza) < 10){\r\n    //   errors.fuerza = 'Minimo 10';\r\n    // }else if(Number(input.fuerza) > 1000){\r\n    //   errors.fuerza = 'Excedio el limite';\r\n    // }\r\n    \r\n    // if (tiene_letras(input.defensa) === 1) {\r\n    //   errors.defensa = 'No se permite texto';\r\n    // }else if(Number(input.defensa) < 10){\r\n    //   errors.defensa = 'Minimo 10';\r\n    // }else if(Number(input.defensa) > 1000){\r\n    //   errors.defensa = 'Excedio el limite';\r\n    // }\r\n  \r\n    // if (tiene_letras(input.velocidad) === 1) {\r\n    //   errors.velocidad = 'No se permite texto';\r\n    // }else if(Number(input.velocidad) < 10){\r\n    //   errors.velocidad = 'Minimo 10';\r\n    // }else if(Number(input.velocidad) > 1000){\r\n    //   errors.velocidad = 'Excedio el limite';\r\n    // }\r\n  \r\n    // if (tiene_letras(input.altura) === 1) {\r\n    //   errors.altura = 'No se permite texto';\r\n    // }else if(Number(input.altura) < 10){\r\n    //   errors.altura = 'Minimo 10';\r\n    // }else if(Number(input.altura) > 1000){\r\n    //   errors.altura = 'Excedio el limite';\r\n    // }\r\n  \r\n    // if (tiene_letras(input.peso) === 1) {\r\n    //   errors.peso = 'No se permite texto';\r\n    // }else if(Number(input.peso) < 10){\r\n    //   errors.peso = 'Minimo 10';\r\n    // }else if(Number(input.peso) > 1000){\r\n    //   errors.peso = 'Excedio el limite';\r\n    // }\r\n  \r\n    // if (!/(.jpg|.jpeg|.png|.gif)$/i.exec(input.imagen)) {\r\n    //   errors.imagen = 'Img is required';\r\n    // }\r\n    \r\n    // if (!input.tipos.length) {\r\n    //   errors.tipos = 'Seleccione tipo de pokemon';\r\n    // }else if(input.tipos.length > 3){\r\n    //   errors.tipos = \"Maximo 3 tipos\";\r\n    // }\r\n  \r\n    return errors;\r\n  }\r\n  \r\n  // valida si un texto contiene numero\r\n  function tiene_numeros(texto){\r\n    let numeros = \"0123456789\";\r\n    for(let i=0; i<texto.length; i++){\r\n       if (numeros.indexOf(texto.charAt(i),0)!==-1){\r\n          return 1;\r\n       }\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  // valida si un numero contiene letras\r\n  // function tiene_letras(texto){\r\n  //   var letras=\"abcdefghyjklmnñopqrstuvwxyz\";\r\n  //   for(let i=0; i<texto.length; i++){\r\n  //      if (letras.indexOf(texto.charAt(i),0)!==-1){\r\n  //         return 1;\r\n  //      }\r\n  //   }\r\n  //   return 0;\r\n  // }\r\n  \r\n  export default validation;"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,KAAK,IAAK;EAE1B,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAIC,aAAa,CAACF,KAAK,CAACG,KAAK,CAAC,KAAK,CAAC,EAAE;IACpCF,MAAM,CAACG,IAAI,GAAG,uBAAuB;EACvC,CAAC,MAAM,IAAGJ,KAAK,CAACI,IAAI,KAAK,EAAE,EAAC;IAC1BH,MAAM,CAACG,IAAI,GAAG,aAAa;EAC7B;EAEA,IAAIF,aAAa,CAACF,KAAK,CAACI,IAAI,CAAC,KAAK,CAAC,EAAE;IACnCH,MAAM,CAACG,IAAI,GAAG,uBAAuB;EACvC,CAAC,MAAM,IAAGJ,KAAK,CAACI,IAAI,KAAK,EAAE,EAAC;IAC1BH,MAAM,CAACG,IAAI,GAAG,aAAa;EAC7B,CAAC,MAAM,IAAGJ,KAAK,CAACI,IAAI,CAACC,MAAM,GAAG,CAAC,EAAC;IAC9BJ,MAAM,CAACG,IAAI,GAAG,wBAAwB;EACxC;EAEA,IAAGJ,KAAK,CAACM,SAAS,EAAC;IACjB,IAAIJ,aAAa,CAACF,KAAK,CAACM,SAAS,CAAC,KAAK,CAAC,EAAE;MACxCL,MAAM,CAACK,SAAS,GAAG,uBAAuB;IAC5C;EACF;EAEA,IAAI,CAACN,KAAK,CAACO,SAAS,EAAE;IACpBN,MAAM,CAACM,SAAS,GAAG,qBAAqB;EAC1C;EAEA,IAAIP,KAAK,CAACQ,SAAS,IAAI,CAACR,KAAK,CAACQ,SAAS,CAACH,MAAM,EAAG;IAC/CJ,MAAM,CAACO,SAAS,GAAG,6BAA6B;EAClD;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,OAAOP,MAAM;AACf,CAAC;;AAED;AACA,SAASC,aAAaA,CAACO,KAAK,EAAC;EAC3B,IAAIC,OAAO,GAAG,YAAY;EAC1B,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACF,KAAK,CAACJ,MAAM,EAAEM,CAAC,EAAE,EAAC;IAC9B,IAAID,OAAO,CAACE,OAAO,CAACH,KAAK,CAACI,MAAM,CAACF,CAAC,CAAC,EAAC,CAAC,CAAC,KAAG,CAAC,CAAC,EAAC;MACzC,OAAO,CAAC;IACX;EACH;EACA,OAAO,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeZ,UAAU"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nexport const ALL_COUNTRIES = \"ALL_COUNTRIES\";\nexport const GET_NAME_COUNTRY = \"GET_NAME_COUNTRY\";\nexport const GET_ID_COUNTRY = \"GET_ID_COUNTRY\";\nexport const GET_ACTIVITIES = \"GET_ACTIVITIES\";\n\n//------------------ request pokemons ----------------\n\nexport const get_all_countries = () => async dispatch => {\n  try {\n    const getAllCountries = await axios.get(\"http://localhost:3001/countries__\");\n    return dispatch({\n      type: ALL_COUNTRIES,\n      payload: getAllCountries.data\n    });\n  } catch (error) {\n    return dispatch({\n      type: ALL_COUNTRIES,\n      payload: {\n        mensaje: error\n      }\n    });\n  }\n};\n\n// export const get_name_pokemon = (name) => async (dispatch) => {\n//     try {\n//         const getNamePokemon = await axios.get(`https://api-pokemon-flame.vercel.app/pokemons/name?nombre=${name}`);\n//         return dispatch({\n//             type: GET_NAME_POKEMON,\n//             payload: getNamePokemon.data\n//         });\n//     } catch (error) {\n//         return dispatch({\n//             type: GET_NAME_POKEMON,\n//             payload: {mensaje: error.message}\n//         });\n//     }\n// }\n\n// export const get_id_pokemon = (id) => async (dispatch) => {\n//     try {\n//         const getIdPokemon = await axios.get(`http://localhost:3001/countries__/BRA/${id}`);\n//         return dispatch({\n//             type: GET_ID_POKEMON,\n//             payload: getIdPokemon.data\n//         });\n//     } catch (error) {\n//         return dispatch({\n//             type: GET_ID_POKEMON,\n//             payload: {mensaje: error.message}\n//         });\n//     }\n// }\n\n// export const update_pokemon = (id, obj) => async (dispatch) => {\n//     try {\n//         const updatePokemon = await axios.put(`https://api-pokemon-flame.vercel.app/pokemons/${id}`, obj);\n//         return dispatch({\n//             type: UPDATE_POKEMON,\n//             payload: updatePokemon.data\n//         });\n//     } catch (error) {\n//         return dispatch({\n//             type: UPDATE_POKEMON,\n//             payload: {mensaje: error.message}\n//         });\n//     }\n// }\n\n// export const create_pokemon = (obj) => async (dispatch) => {\n//     try {\n//         const createPokemon = await axios.post(`https://api-pokemon-flame.vercel.app/pokemons`, obj);\n//         return dispatch({\n//             type: CREATE_POKEMON,\n//             payload: createPokemon.data\n//         });\n//     } catch (error) {\n//         return dispatch({\n//             type: CREATE_POKEMON,\n//             payload: {mensaje: error.message}\n//         });\n//     }\n// }\n\n// export const delete_pokemon = (id) => async (dispatch) => {\n//     try {\n//         const deletePokemon = await axios.delete(`https://api-pokemon-flame.vercel.app/pokemons/${id}`);\n//         return dispatch({\n//             type: DELETE_POKEMON,\n//             payload: deletePokemon.data\n//         });\n//     } catch (error) {\n//         return dispatch({\n//             type: DELETE_POKEMON,\n//             payload: {mensaje: error.message}\n//         });\n//     }\n// }\n\n// //------------------- request tipos ---------------------\n\n// export const get_all_types = () => async (dispatch) => {\n//     try {\n//         const getAllTypes = await axios.get(\"https://api-pokemon-flame.vercel.app/types\");\n//         return dispatch({\n//             type: ALL_TYPES,\n//             payload: getAllTypes.data\n//         });\n//     } catch (error) {\n//         return dispatch({\n//             type: ALL_TYPES,\n//             payload: {mensaje: error.message}\n//         });\n//     }\n// }\n\n// //------------------- request filtros ------------------------\n\n// export const filtrosPokemons = (obj) => async (dispatch) => {\n//     try {\n//         return dispatch({\n//             type: FILTROS_POKEMONS,\n//             payload: obj\n//         });\n//     } catch (error) {\n//         return dispatch({\n//             type: FILTROS_POKEMONS,\n//             payload: {mensaje: error.message}\n//         });\n//     }\n// }","map":{"version":3,"names":["axios","ALL_COUNTRIES","GET_NAME_COUNTRY","GET_ID_COUNTRY","GET_ACTIVITIES","get_all_countries","dispatch","getAllCountries","get","type","payload","data","error","mensaje"],"sources":["D:/proyects/PI-Countries-main/client/src/redux/action/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const ALL_COUNTRIES = \"ALL_COUNTRIES\";\r\nexport const GET_NAME_COUNTRY = \"GET_NAME_COUNTRY\";\r\nexport const GET_ID_COUNTRY = \"GET_ID_COUNTRY\";\r\nexport const GET_ACTIVITIES = \"GET_ACTIVITIES\";\r\n\r\n//------------------ request pokemons ----------------\r\n\r\nexport const get_all_countries = () => async (dispatch) => {\r\n    try {\r\n        const getAllCountries = await axios.get(\"http://localhost:3001/countries__\");\r\n        return dispatch({\r\n            type: ALL_COUNTRIES,\r\n            payload: getAllCountries.data\r\n        });\r\n    } catch (error) {\r\n        return dispatch({\r\n            type: ALL_COUNTRIES,\r\n            payload: {mensaje: error}\r\n        });\r\n    }\r\n}\r\n\r\n// export const get_name_pokemon = (name) => async (dispatch) => {\r\n//     try {\r\n//         const getNamePokemon = await axios.get(`https://api-pokemon-flame.vercel.app/pokemons/name?nombre=${name}`);\r\n//         return dispatch({\r\n//             type: GET_NAME_POKEMON,\r\n//             payload: getNamePokemon.data\r\n//         });\r\n//     } catch (error) {\r\n//         return dispatch({\r\n//             type: GET_NAME_POKEMON,\r\n//             payload: {mensaje: error.message}\r\n//         });\r\n//     }\r\n// }\r\n\r\n// export const get_id_pokemon = (id) => async (dispatch) => {\r\n//     try {\r\n//         const getIdPokemon = await axios.get(`http://localhost:3001/countries__/BRA/${id}`);\r\n//         return dispatch({\r\n//             type: GET_ID_POKEMON,\r\n//             payload: getIdPokemon.data\r\n//         });\r\n//     } catch (error) {\r\n//         return dispatch({\r\n//             type: GET_ID_POKEMON,\r\n//             payload: {mensaje: error.message}\r\n//         });\r\n//     }\r\n// }\r\n\r\n// export const update_pokemon = (id, obj) => async (dispatch) => {\r\n//     try {\r\n//         const updatePokemon = await axios.put(`https://api-pokemon-flame.vercel.app/pokemons/${id}`, obj);\r\n//         return dispatch({\r\n//             type: UPDATE_POKEMON,\r\n//             payload: updatePokemon.data\r\n//         });\r\n//     } catch (error) {\r\n//         return dispatch({\r\n//             type: UPDATE_POKEMON,\r\n//             payload: {mensaje: error.message}\r\n//         });\r\n//     }\r\n// }\r\n\r\n// export const create_pokemon = (obj) => async (dispatch) => {\r\n//     try {\r\n//         const createPokemon = await axios.post(`https://api-pokemon-flame.vercel.app/pokemons`, obj);\r\n//         return dispatch({\r\n//             type: CREATE_POKEMON,\r\n//             payload: createPokemon.data\r\n//         });\r\n//     } catch (error) {\r\n//         return dispatch({\r\n//             type: CREATE_POKEMON,\r\n//             payload: {mensaje: error.message}\r\n//         });\r\n//     }\r\n// }\r\n\r\n// export const delete_pokemon = (id) => async (dispatch) => {\r\n//     try {\r\n//         const deletePokemon = await axios.delete(`https://api-pokemon-flame.vercel.app/pokemons/${id}`);\r\n//         return dispatch({\r\n//             type: DELETE_POKEMON,\r\n//             payload: deletePokemon.data\r\n//         });\r\n//     } catch (error) {\r\n//         return dispatch({\r\n//             type: DELETE_POKEMON,\r\n//             payload: {mensaje: error.message}\r\n//         });\r\n//     }\r\n// }\r\n\r\n\r\n// //------------------- request tipos ---------------------\r\n\r\n// export const get_all_types = () => async (dispatch) => {\r\n//     try {\r\n//         const getAllTypes = await axios.get(\"https://api-pokemon-flame.vercel.app/types\");\r\n//         return dispatch({\r\n//             type: ALL_TYPES,\r\n//             payload: getAllTypes.data\r\n//         });\r\n//     } catch (error) {\r\n//         return dispatch({\r\n//             type: ALL_TYPES,\r\n//             payload: {mensaje: error.message}\r\n//         });\r\n//     }\r\n// }\r\n\r\n// //------------------- request filtros ------------------------\r\n\r\n// export const filtrosPokemons = (obj) => async (dispatch) => {\r\n//     try {\r\n//         return dispatch({\r\n//             type: FILTROS_POKEMONS,\r\n//             payload: obj\r\n//         });\r\n//     } catch (error) {\r\n//         return dispatch({\r\n//             type: FILTROS_POKEMONS,\r\n//             payload: {mensaje: error.message}\r\n//         });\r\n//     }\r\n// }\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAC9C,OAAO,MAAMC,cAAc,GAAG,gBAAgB;;AAE9C;;AAEA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACvD,IAAI;IACA,MAAMC,eAAe,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,mCAAmC,CAAC;IAC5E,OAAOF,QAAQ,CAAC;MACZG,IAAI,EAAER,aAAa;MACnBS,OAAO,EAAEH,eAAe,CAACI;IAC7B,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAON,QAAQ,CAAC;MACZG,IAAI,EAAER,aAAa;MACnBS,OAAO,EAAE;QAACG,OAAO,EAAED;MAAK;IAC5B,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}